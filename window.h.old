
#ifndef WINDOW_H
#define WINDOW_H


#include <math.h>
#include <QWidget>
#include <QPushButton>
#include <QPainter>
#include <QLabel>
#include <QRadioButton>

#define MIN_N 50
#define MIN_FOR_DRAW 1e-6
#define MIN_FOR_COMPARE 1e-12

class Window : public QWidget
{
  Q_OBJECT

  int func_id;
  QString f_name;
  double a;
  double b;
  int n;
  double (*f) (double);
  double (*d1) (double);
  double (*d2) (double);
  int idx_delta_function;
  double val_delta_function;
  int n_changed;
  QString current_n;
  QWidget *parent_save;

  // for methods
  double *x;
  double *m_coef_a,
         *m_coef_b,
         *m_coef_c,
         *m_coef_d;

  // for spline
  double *v;
  double *ksi;
  double *func;

  double *coeff_v_left,
         *coeff_v_center,
         *coeff_v_right,
         *rhs;

  double *c_1,
         *c_2,
         *c_3;

public:

  Window (QWidget *parent);
  ~Window ();

  QSize minimumSizeHint () const;
  QSize sizeHint () const;

  double scale_coeff;

  void use_all_methods ();

  void init_drawing_plane (QPainter &painter, int N);

  //chebyshev
  int make_array_coef_chebyshev (double a,
      double b,
      int n,
      double *coef_a,
      double *coef_b,
      double *coef_c,
      double *coef_d
      );

  double f_interpolation_chebyshev (double x,
      double *coef,
      double a,
      double b,
      int n
      );

  // spline
  void solve_v (int N);
  double f_spline_interpolation (double x_0, int N);

public:
  int parse_command_line (int argc, char *argv[]);

public slots:
  void change_func ();
  void get_closer();
  void get_further();
  void double_n();
  void smaller_n();
  void delta_function_plus();
  void delta_function_minus();
  void delta_function_up();
  void delta_function_down();
  void exit_all();

protected:
  void paintEvent (QPaintEvent *event);
};

/// ERMIT
///

#endif
